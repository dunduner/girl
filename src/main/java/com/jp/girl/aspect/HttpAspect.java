package com.jp.girl.aspect;import org.aspectj.lang.JoinPoint;import org.aspectj.lang.annotation.*;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.stereotype.Component;import org.springframework.web.context.request.RequestContextHolder;import org.springframework.web.context.request.ServletRequestAttributes;import javax.servlet.http.HttpServletRequest;@Aspect@Componentpublic class HttpAspect {    private  final static Logger logger = LoggerFactory.getLogger(HttpAspect.class);    @Pointcut("execution(public * com.jp.girl.controller.GirlController.*(..))")    public void  log(){}    @Before("log()")    public void doBefore(JoinPoint joinPoint){        logger.info("@Before_aop开始了");        ServletRequestAttributes Attributes = (ServletRequestAttributes)RequestContextHolder.getRequestAttributes();        HttpServletRequest  request = Attributes.getRequest();        //url        logger.info("url={}",request.getRequestURL());        //method        logger.info("method={}",request.getMethod());        //ip        logger.info("ip={}",request.getRemoteAddr());        //类方法        logger.info("class_method ={}",                joinPoint.getSignature().getDeclaringTypeName()+"中的"+                joinPoint.getSignature().getName()+"方法");        //参数        logger.info("参数={}",joinPoint.getArgs());    }    @After("log()")    public void doAfter(){        logger.info("@After_aop结束了");    }    @AfterReturning(returning = "object",pointcut = "log()")    public void doAfterReturning(Object object){        logger.info("request = {}",object);    }}